:PROPERTIES:
:ID:       6f86fa94-4be1-49f8-92c2-c18fd1b4b811
:END:
#+title: CPU Central processing unit
#+date: [2024-02-23 Fri 11:53]
#+startup: overview

* Diagrams
:PROPERTIES:
:ID:       be3f3f6b-c607-41b7-93d0-21a7802292ab
:END:
** CPU conceptional
[[file:images/CPU_conceptional.png]]
** CPU implementation
[[file:images/CPU_implementation.png]]
** Nutshell CPU behaviour
*** Instructions including D and A registers
[[file:images/SampleCPUOperations.png]]
[[file:images/SampleCPUOperationsJumps.png]]
- Jump instructions
* API
** abstraction
[[file:images/cpu_abstraction.png]]
** Inputs
*** [[id:7bac8f3e-14ee-45bf-808f-74796b46fcfc][Data memory]]
- inM
- data value
- value of currently selected data memory register
- value that the cpu is operating on
- at any given point, there is always a selected register in the data memory
*** Instruction ([[id:cadb2fc2-260c-4516-afea-0c79d241da1f][Program memory]])
- instruction
- value of currently selected instruction memory register
- at any given point, there is always a selected register in the instruction memory
- comes from [[id:79edffa4-b49a-468b-a27f-e19153c6a69d][ROM]]
*** Reset
- from user
** Outputs
*** outM
- what we want to write
*** addressM
- where we want to write it
*** writeM (1 or 0)
- where to write it
- enabling write operations
*** pc
- address of next instruction to be fetched and executed
* Elements
** [[id:7f44e05c-18fe-4ab3-883f-a3868de1591a][ALU Arithmetic Logic Unit]]
** [[id:214d7233-a7ea-483f-99dc-90c29db299f0][A register]]
** [[id:0ccbabc0-f195-4627-b31b-b124a21330bb][D register]]
** [[id:6091f460-a5ba-4182-bdd2-4a4a0d5c2d24][Program counter]]
** Multiplexer
* Instructions
- [[id:2673d501-184a-4883-bda1-9357b6c4323f][Instruction Handling (in more detail)]]
* Tips
- all parts are already built Chip-parts
- use c-control bits, root them to correct destination in the various chip-parts
  - may need to add some logic, processing of control bits
  - bare in mind the control bits coming out of the alu
