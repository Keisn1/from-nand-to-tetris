:PROPERTIES:
:ID:       6091f460-a5ba-4182-bdd2-4a4a0d5c2d24
:END:
#+title: NandToTetris Counters (program counter)
#+date: [2023-10-14 Sa 08:25]
#+startup: overview

* Counter is rather meant as Program Counter (PC)
* Why are they important?
- Computer needs to know what to do next
  - PC (Program Counter) contains the address of the instructions that will be done next
  - fetch and execute
* Control Settings
** Reset: Fetch first instruction (PC=0) - resetting
** Next/NoJump: Fetch next instruction (PC++) - incrementing
** unconditional Goto: fetch instruction n (PC=A) - setting
** conditional Goto: fetch instruction (PC=A) if condition is true
** table
| jump | j1 | j2 | j3 | semantic | zr | ng | load | inc | boolean(zr/ng)  |
|------+----+----+----+----------+----+----+------+-----+-----------------|
| null |  0 |  0 |  0 | out=0    |  x |  x |    0 |   1 | x               |
|------+----+----+----+----------+----+----+------+-----+-----------------|
| JGT  |  0 |  0 |  1 | out>0    |  0 |  0 |    1 |   0 | notZr AND notNg |
|      |    |    |    |          |  0 |  1 |    0 |   1 |                 |
|      |    |    |    |          |  1 |  0 |    0 |   1 |                 |
|------+----+----+----+----------+----+----+------+-----+-----------------|
| JEQ  |  0 |  1 |  0 | out=0    |  0 |  0 |    0 |   1 | zr              |
|      |    |    |    |          |  0 |  1 |    0 |   1 |                 |
|      |    |    |    |          |  1 |  0 |    1 |   0 |                 |
|------+----+----+----+----------+----+----+------+-----+-----------------|
| JGR  |  0 |  1 |  1 | out>=0   |  0 |  0 |    1 |     | notNg           |
|      |    |    |    |          |  0 |  1 |    0 |     |                 |
|      |    |    |    |          |  1 |  0 |    1 |     |                 |
|------+----+----+----+----------+----+----+------+-----+-----------------|
| JLT  |  1 |  0 |  0 | out<0    |  0 |  0 |    0 |   1 | ng              |
|      |    |    |    |          |  0 |  1 |    1 |   0 |                 |
|      |    |    |    |          |  1 |  0 |    0 |   1 |                 |
|------+----+----+----+----------+----+----+------+-----+-----------------|
| JNE  |  1 |  0 |  1 | out!=0   |  0 |  0 |    1 |   0 | notZr           |
|      |    |    |    |          |  0 |  1 |    1 |   0 |                 |
|      |    |    |    |          |  1 |  0 |    0 |   1 |                 |
|------+----+----+----+----------+----+----+------+-----+-----------------|
| JLE  |  1 |  1 |  0 | out<=0   |  0 |  0 |    0 |   1 | zr OR ng        |
|      |    |    |    |          |  0 |  1 |    1 |   0 |                 |
|      |    |    |    |          |  1 |  0 |    1 |   0 |                 |
|------+----+----+----+----------+----+----+------+-----+-----------------|
| JMP  |  1 |  1 |  1 | uncond   |  x |  x |    1 |   0 | x               |
* Abstraction
[[file:images/CounterAbstraction.png]]
[[file:~/workspace/from-nand-to-tetris/nand2tetris/tools/builtInChips/PC.hdl::// This file is part of www.nand2tetris.org][PC builtin chip]]

/**
 * 16-bit counter with load and reset controls.
 *
 * If reset(t-1) then out(t) = 0
 *    else if load(t-1) then out(t) = in(t-1)
 *         else if inc(t-1) then out(t) = out(t-1) + 1 (integer addition)
 *              else out(t) = out(t-1)
 */
